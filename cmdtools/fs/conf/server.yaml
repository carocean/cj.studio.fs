#部署架构：ngnix(1-n)->reader server(1-n)->nas
#数据目录，如果以/开头则是绝对路径，否则视为在文件程序的根目录中找
#一个云文件系统支撑一个uc应用的文件存储，如果uc（用户中心）多个应用要使用文件系统，则需要建立多个fs服务器，好处是"专业"
#/filesystem/data
#/Users/caroceanjofers/Downloads/test/
dataDir: /filesystem/data
reader:
  server:
    #为应对多网卡所以采用地址法
    # 注：在docker里运行去掉地址中的localhost，否则外部访问不了
    listen: :7100
    ssl: false
    workThreadCount: 10
    chunkedSize: 8192
writer:
  # 指向读服务器地址，用于下载文件
  #http://47.105.165.186:7100
  #http://localhost:7100
  readerServer: http://47.105.165.186:7100
  server:
    #为应对多网卡所以采用地址法
    # 注：在docker里运行去掉地址中的localhost，否则外部访问不了
    listen: :7110
    ssl: false
    workThreadCount: 10
    chunkedSize: 8192
#用户中心,客户端负载
ucs:
  appid: gbera.netos
  appKey: 92D9F2B8078D039A7405AC0498F71059
  appSecret: 9402073ADEF6DEEB35E2FDBAC7051471
  device: fs-browser-device
  maxIdleConnections: 10
  keepAliveDuration: 30000
  readTimeout: 30000
  connectTimeout: 15000
  writeTimeout: 30000
  addresses:
    #172.31.210.93:9090
    #47.105.165.186
    - http://172.31.210.93:9090/uc/auth.service
    - http://172.31.210.93:9090/uc/auth.service
rbac:
  # /system 为系统目录只有指定的角色全权访问
  strategy: default
  #强制检查令牌，false表示是开放系统
  forceToken: true
  acl:
    - /**:
        - read: administrators
        - write: administrators
        - delete: administrators
        - list: administrators
    - /avatars/**:
        - read: everyone
        - write: everyone
        - delete: administrators
        - list: administrators
    - /app/**:
        - read: everyone
        - write: everyone
    - /public/**:
        - read: everyone
        - write: everyone
        - delete: administrators|developers|tests
        - list: administrators|developers|tests
    - /system/**:
        - read: administrators|developers|tests
        - write: administrators
        - delete:
        - list:  administrators|developers|tests
    - /users/**:
        - read: yourself
        - write: yourself
        - delete: yourself
        - list: yourself
